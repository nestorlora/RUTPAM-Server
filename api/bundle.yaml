openapi: 3.0.1
info:
  title: RUTPAM API
  version: 0.3-dev
  description: |
    This API defines the methods and objects to provide and receive data from/to a RUTPAM Server. The design extends GTFS specification to a more abstract and complete knowledge base about the stored public transit networks.
  contact:
    name: NÃ©stor Lora
    email: nestorlora@geeklab.es
  license:
    name: MIT
servers:
  - url: 'http://localhost:5000'
    description: Development local HTTP Server
paths:
  /info:
    summary: Server information
    get:
      tags:
        - Server
      summary: Getting the server status
      description: Returns server information
      security: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Server version
                    example: 1.0.0
                  contact:
                    type: string
                    description: Email contact
                    example: webmaster@localhost
                  web:
                    type: string
                    description: Project website
                    example: 'http://localhost/RUTPAM'
                  maintenance:
                    type: boolean
                    description: Show if the server may contain inaccurate information due to maintenance works
                    example: false
  /networks:
    get:
      summary: Get all networks
      tags:
        - Networks
      description: Returns all the networks in the database
      parameters: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      networks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Network'
                    required:
                      - networks
        '429':
          description: The user has sent too many requests in a given amount of time
          headers:
            Retry-After:
              schema:
                type: integer
              description: Seconds to wait before making a new request
              example: 60
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 429
                status: Too many requests
  '/networks/{id}':
    get:
      tags:
        - Networks
      summary: Get a specific network
      description: Return a single network
      parameters:
        - in: path
          name: id
          description: Network ID
          required: true
          schema:
            $ref: '#/components/schemas/objectId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      networks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Network'
                    required:
                      - networks
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                status: Not found
        '429':
          $ref: '#/paths/~1networks/get/responses/429'
components:
  schemas:
    Network:
      type: object
      description: 'A network is a set of public transport services operating under the  same authority with a common organization (such as: timetable coordination, common fare rules, transfers, etc...)'
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/objectId'
            - description: Network internal identification
      required:
        - id
    ApiResponse:
      type: object
      properties:
        code:
          type: number
          format: int32
          example: 200
        status:
          type: string
          example: OK
      required:
        - code
        - status
    objectId:
      type: integer
      example: '248'
    url:
      type: string
      example: 'http://example.com/resource'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Server
    description: Server status and authentication
  - name: Networks
    description: Transit networks
  - name: Routes
  - name: Subroutes
  - name: Stops
  - name: Stations
  - name: Transfers
  - name: Paths
  - name: Points
  - name: Agencies
  - name: Zones
  - name: Towns
